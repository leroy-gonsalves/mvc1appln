<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - My ASP.NET Application</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
  @*@{
      Html.RenderPartial("_HeaderNavBar"); // returns void so ; is required at end hence enclosed in brackets
    
  }*@
    @Html.Partial("_HeaderNavBar")
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - My ASP.NET Application</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>







@*:::::::::::::::::::::::::::::::::::::::::::::::::Difference ::::::::::::::::::::::
Html.Partial()	                                                    Html.RenderPartial()
Html.Partial returns html string.	                                Html.RenderPartial returns void.
Html.Partial injects html string of 
the partial view into main view.	                                Html.RenderPartial writes html in response stream.
Performance is slow.	                                            Perform faster than HtmlPartial().
Html.Partial() need not to be inside the braces.	                Html.RenderPartial must be inside braces @{ }.*@